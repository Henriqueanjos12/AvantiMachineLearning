# -*- coding: utf-8 -*-
"""Atividade II - Python e Visualização e Análise de Dados.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rn4plmIAps5kCBMOeXgQnVNsqC0VL5aD

#Atividade II - Python e Visualização e Análise de Dados

##Escreva uma função que receba uma lista de números e retorne outra lista com os números ímpares.
"""

def impares(lista):
  lista_impares = []
  for i in lista:
    if(i%2!=0):
      lista_impares.append(i)
  return lista_impares

lista = [0,1,2,3,4,5,6,7,8,9]

impares(lista)

"""##Escreva uma função que receba uma lista de números e retorne outra lista com os números primos presentes."""

def primos(lista):
  lista_primos = []
  for i in lista:
    primo = True
    for j in range(2,i):
      if(i%j==0):
        primo = False
    if primo:
      lista_primos.append(i)
  return lista_primos

primos(lista)

"""##Escreva uma função que receba duas listas e retorne outra lista com os elementos que estão presentes em apenas uma das listas."""

def diferenca(lista1, lista2):
    lista1 = set(lista1)
    lista2 = set(lista2)
    diferenca = lista1.symmetric_difference(lista2)
    return list(diferenca)

diferenca(impares(lista),primos(lista))

"""#Dada uma lista de números inteiros, escreva uma função para encontrar o segundo maior valor na lista."""

def segundo_maior_valor(lista):
  lista.sort()
  return lista[-2]

segundo_maior_valor(lista)

"""##Crie uma função que receba uma lista de tuplas, cada uma contendo o nome e a idade de uma pessoa, e retorne a lista ordenada pelo nome das pessoas em ordem alfabética."""

lista_pessoas = [("Luiz",27),("Pedro",26), ("Ireuda", 47), ("Nonato", 57)]
def ordena_lista(lista):
  lista.sort()
  return lista
ordena_lista(lista_pessoas)

"""##Observe os espaços sublinhados e complete o código."""

import matplotlib.pyplot as plt
import numpy as np
fig, axs = plt.subplots(ncols=2, nrows=2, figsize=(5.5, 3.5), layout="constrained")
for row in range(2):
  for col in range(2):
    axs[row, col].annotate(f'axs[{row}, {col}]', (0.5, 0.5), transform=axs[row, col].transAxes, ha='center', va='center', fontsize=18, color='darkgrey')
fig.suptitle('plt.subplots()')

"""##Observe os espaços sublinhados e complete o código."""

import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
x = np.arange(-2 * np.pi, 2 * np.pi, 100)
y = np.abs(x)
fig,ax = plt.subplots()
ax.scatter(x,y)

"""##Utilizando pandas, como realizar a leitura de um arquivo CSV em um DataFrame e exibir as primeiras linhas?"""

import pandas as pd
dataframe = pd.read_csv('https://raw.githubusercontent.com/Henriqueanjos12/AvantiMachineLearning/Atividades/coordenadas.csv')
print(dataframe.head())

"""##Utilizando pandas, como selecionar uma coluna específica e filtrar linhas em um “DataFrame” com base em uma condição?"""

#Utilizando o Data Frame da questão anterior
#Selecionando uma coluna específica
print(dataframe['ponto'])

#Utilizando o Data Frame da questão anterior
#Filtrando uma linha com base em uma condição
linha_filtrada = dataframe.query('ponto > 2')
print(linha_filtrada)

"""##Utilizando pandas, como lidar com valores ausentes (NaN) em um DataFrame?"""

#Utilizando o Data Frame da questão anterior
# Remover linhas com pelo menos um valor ausente
dataframe_sem_nulos = dataframe.dropna()
dataframe_sem_nulos

#Utilizando o Data Frame da questão anterior
# Preencher valores ausentes com zero
dataframe_preenchido_zero = dataframe.fillna(0)
dataframe_preenchido_zero

#Utilizando o Data Frame da questão anterior
# Preencher valores ausentes com a média da coluna
media_coluna = dataframe[' coord_x'].mean()
dataframe_preenchido_media = dataframe.fillna(media_coluna)
dataframe_preenchido_media